Student: Dunni Adenuga

Lab1:
Grade: 20/20
Comments: Good work!
P1.1: Very good!
P1.2: Very good!
P2: Very good!
P3.1: Very good! Where you said "the general webpage acted as the server" really should be just "web server." Pages don't act as a server.
P3.2: Very good!

Lab2:
Grade: 16/20
Comments:
5/8 P1: The basic function works. But the client results in "segmentation fault"
--------------------------------------------------------------
    -- Joel Spolsky
    -- Seven steps to remarkable customer service ( http://www.joelonsoftware.com/articles/customerservice.html )

Segmentation fault
[xmeng@polaris lab02]$ 
------------------------------------------------------------
I think the reason for the seg fault is that you didn't terminate the string after readn(s, buf, size). You should have done after the readn() the following.
buf[size] = 0;

In addition, it seems that the fortune server always returns one fix piece of fortune.

5/6 P2: Very good, though the same seg fault issue exists.

6/6 P3: Good!

Lab3:
Grade: 20/20
Comments: Very good!

Lab4:
Grade: 14/20
Comments:
4/6 P 1
    P 1.1: Good.
    P 1.2: Good.
    P 1.3: It is better to use sizeof(struct node_t) instead of a constant 288.
    P 1.4: How do you read the node from the receiving side?
    In addition, the program pair list-sender.c and list-receiver.c do not work correctly. Part of the reason is you didn't set the field nodeList->len correctly.

5/6 P 2: While the program and results are correct, you should have included a copy of the screen output in your answers.txt.

5/8 P 3: You didn't answer questions P 3.1 and 3.2.

